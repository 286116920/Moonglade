@{
    Layout = "_LayoutAdmin";
}

@model X.PagedList.StaticPagedList<Moonglade.Model.CommentListItem>
@using Microsoft.Extensions.Options
@using Moonglade.Core
@using Moonglade.Model.Settings
@using X.PagedList.Mvc.Common
@using X.PagedList.Mvc.Core
@inject IOptions<AppSettings> Settings

@Html.AntiForgeryToken()

@section scripts{
    <script>
        $(function () {
            $(".btn-delete").click(function () {
                var cid = $(this).data("commentid");
                ajaxPostWithCSRFToken("delete", { commentId: cid }, function (data) {
                    $(`#panel-comment-${data}`).slideUp();
                });
            });

            $(".btn-reply").click(function () {
                var cid = $(this).data("commentid");
                $(`#panel-comment-${cid} .reply-ui`).show();
            });

            $(".btn-reply-post").click(function () {
                var cid = $(this).data("commentid");
                var replyContent = $(`#replycontent-${cid}`).val();

                ajaxPostWithCSRFToken("reply", { commentId: cid, replyContent: replyContent }, function (data) {
                    $(`#panel-comment-${data.commentId} .reply-ui`).slideUp();
                    $(`#panel-comment-${data.commentId} .reply-list`).prepend(
                        `<hr /><div class="reply-container"><div><strong>Reply</strong><span class="pull-right text-muted">${data.replyTimeUtc
                        }</span></div><p>${data.replyContent}</p></div>`);
                });
            });

            $(".btn-approve").click(function () {
                setApprovalStatus($(this).data("commentid"), true);
            });
        });

        function setApprovalStatus(commentId, status) {
            ajaxPostWithCSRFToken("set-approval-status", { commentId: commentId, isApproved: status }, function (data) {
                $(`#panel-comment-${data} .btn-approve`).removeClass('btn-outline-success');
                $(`#panel-comment-${data} .btn-approve`).addClass('btn-success');
            });
        }
    </script>
}

<h3>
    Comments
</h3>
<hr />

@if (Model.Count == 0)
{
    <div class="alert alert-info">
        No Comments
    </div>
}
else
{
    foreach (var item in Model)
    {
        <div id="panel-comment-@item.Id" class="mb-4">
            <div class="float-right">
                <a href="javascript:;" class="btn btn-sm @(item.IsApproved ? "btn-success" : "btn-outline-success") btn-approve" data-commentid="@item.Id">
                    <i class="fas fa-star"></i>
                </a>
                <button class="btn btn-sm btn-primary btn-reply" data-commentid="@item.Id">
                    <i class="fa fa-reply"></i>
                </button>
                <button class="btn btn-sm btn-danger btn-delete" data-commentid="@item.Id">
                    <i class="fa fa-trash-alt"></i>
                </button>
            </div>

            <h6>
                @item.Username (<a href="mailto:@item.Email" class="d-none d-sm-inline">@item.Email</a>)
            </h6>
            <div>
                @Html.Raw(Utils.MdContentToHtml(item.CommentContent))
            </div>
            <div>
                @item.PostTitle
            </div>

            <div class="text-muted">
                <span>@Utils.UtcToZoneTime(item.CreateOnUtc, Settings.Value.TimeZone).ToString("yyyy-MM-dd HH:mm")</span> | <span class="text-muted d-none d-sm-inline">@item.IpAddress</span>
            </div>

            <div class="reply-ui mt-3" style="display: none;">
                <form>
                    <div class="form-group">
                        <textarea class="form-control"
                                  id="replycontent-@item.Id"
                                  name="ReplyContent"
                                  placeholder="Content" type="text"></textarea>
                    </div>

                    <a class="btn btn-success btn-reply-post" href="#" data-commentid="@item.Id">
                        Reply
                    </a>
                </form>
            </div>
            <div class="reply-list">
                @foreach (var reply in item.CommentReplies.OrderByDescending(t => t.ReplyTimeUtc))
                {
                    <hr />
                    <div class="reply-container">
                        <div>
                            <strong>Edi Wang</strong>
                            <span class="float-right text-muted">@Utils.UtcToZoneTime(reply.ReplyTimeUtc, Settings.Value.TimeZone)</span>
                        </div>
                        <p>
                            @reply.ReplyContent
                        </p>
                    </div>
                }
            </div>
        </div>
        <hr />
    }
}

@Html.PagedListPager(Model, page => $"?page={page}", new PagedListRenderOptions
{
    LiElementClasses = new[] { "page-item" },
    PageClasses = new[] { "page-link" },
    UlElementClasses = new[] { "pagination justify-content-end" },
    DisplayEllipsesWhenNotShowingAllPageNumbers = false
})
@using Moonglade.Configuration.Abstraction
@inject IBlogConfig BlogConfig

<aside class="col-xl-3 d-none d-xl-block">
    <section class="blog-info-desktop-lg d-none d-xl-block mb-4">
        <div class="card-bkimg-container">
            <img class="card-bkimg" alt="" src="@Url.Action("GetBloggerAvatar", "Image")" />
        </div>
        <div class="blog-info-photo-text text-center">
            <a asp-page="/about">
                <img src="@Url.Action("GetBloggerAvatar", "Image")"
                     alt="@BlogConfig.BlogOwnerSettings.Name"
                     class="rounded-circle blogger-head-pic" />
            </a>
            <div>
                <h3 class="mt-3">
                    @BlogConfig.BlogOwnerSettings.Name
                </h3>
                <p>
                    @Html.Raw(BlogConfig.BlogOwnerSettings.Description)
                </p>
            </div>
        </div>
        <div>
            <a asp-page="/about" class="btn btn-success btn-block">
                About
            </a>
        </div>
    </section>

    @if(!string.IsNullOrWhiteSpace(BlogConfig.GeneralSettings.SideBarCustomizedHtmlPitch))
    {
        @Html.Raw(BlogConfig.GeneralSettings.SideBarCustomizedHtmlPitch)
    }

    <section class="top-tags mb-4">
        <div class="card">
            <div class="card-header">Top Tags</div>
            <div class="card-body">
                <cache expires-after="@TimeSpan.FromMinutes(60)">
                    @await Component.InvokeAsync("HotTags")
                </cache>
            </div>
        </div>
    </section>

    <section class="cat-list mb-4">
        <div class="card">
            <div class="card-header">All Categories</div>
            <cache expires-after="@TimeSpan.FromMinutes(60)">
                @await Component.InvokeAsync("CategoryList")
            </cache>
        </div>
    </section>
</aside>
